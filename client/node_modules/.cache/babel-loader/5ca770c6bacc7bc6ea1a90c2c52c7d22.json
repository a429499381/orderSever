{"remainingRequest":"/Users/cc/Desktop/order/client/node_modules/babel-loader/lib/index.js!/Users/cc/Desktop/order/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/cc/Desktop/order/client/src/axiosAction/config.js","dependencies":[{"path":"/Users/cc/Desktop/order/client/src/axiosAction/config.js","mtime":1588233436682},{"path":"/Users/cc/Desktop/order/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cc/Desktop/order/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cc/Desktop/order/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gICDlnKhodHRwLmpz5Lit5byV5YWlYXhpb3MKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy/lvJXlhaUgYXhpb3MKLy8gaW1wb3J0IFFTIGZyb20gJ3FzJzsgLy8g5byV5YWlcXPmqKHlnZfvvIznlKjmnaXluo/liJfljJZwb3N057G75Z6L55qE5pWw5o2u77yM5p+Q5Lqb6K+35rGC5Lya55So5b6X5YiwCi8vIGltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJyAgICAvL+W8leWFpSBlbGVtZW50LXVpIOeahCBNZXNzYWdlIOaooeWdl++8jOeUqOS6juS/oeaBr+aPkOekugovLyBpbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZScgICAgIC8v5byV5YWlIHZ1ZXgg5Lit55qE5pWw5o2uCi8vIGltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJyAgIC8v5byV5YWl5ou/5Yiw55qE5p2D6ZmQdG9ja2VuCgp2YXIgVVJJID0gJ2h0dHA6Ly8xMjcuMC4wLjE6MzAwMC9hcGkvdXNlcnMnOyAvLyBjcmVhdGUgYW4gYXhpb3MgaW5zdGFuY2UgICDliJvlu7pheGlvc+WunuS+iwoKdmFyIHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6IFVSSSwKICAvLyBhcGkg55qEIGJhc2VfdXJsCiAgdGltZW91dDogNTAwMCwKICAvLyByZXF1ZXN0IHRpbWVvdXQgIOiuvue9ruivt+axgui2heaXtuaXtumXtAogIHJlc3BvbnNlVHlwZTogImpzb24iLAogIC8vIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgLy8g5piv5ZCm5YWB6K645bimY29va2ll6L+Z5LqbCiAgaGVhZGVyczogewogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgiIC8vICJBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFscyI6IHRydWUsCgogIH0sCiAgdmFsaWRhdGVTdGF0dXM6IGZ1bmN0aW9uIHZhbGlkYXRlU3RhdHVzKHN0YXR1cykgewogICAgcmV0dXJuIHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgNTAwOyAvLyBkZWZhdWx0CiAgfQp9KTsgLy8gY3JlYXRlIGFuIGF4aW9zIGluc3RhbmNlCi8vIHNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKAovLyAgIGNvbmZpZyA9PiB7Ci8vICAgICAvLyDlnKjlj5HpgIHor7fmsYLkuYvliY3lgZrku4DkuYgKLy8gICAgIGlmIChjb25maWcubWV0aG9kID09PSAicG9zdCIpIHsKLy8gICAgICAgLy8g5bqP5YiX5YyWCi8vICAgICAgIC8vIGNvbmZpZy5kYXRhID0gcXMuc3RyaW5naWZ5KGNvbmZpZy5kYXRhKTsKLy8gICAgICAgLy8gY29uZmlnLmRhdGEgPSBKU09OLnN0cmluZ2lmeShjb25maWcuZGF0YSk7Ci8vICAgICAgIC8vIOa4qemmqOaPkOekuizoi6XmmK/otLXlhazlj7jnmoTmj5DkuqTog73nm7TmjqXmjqXlj5dqc29uIOagvOW8jyzlj6/ku6XkuI3nlKggcXMg5p2l5bqP5YiX5YyW55qECi8vICAgICB9ZWxzZSB7Ci8vICAgICAgICAgICBpZiAoc3RvcmUuZ2V0dGVycy50b2tlbikgewovLyAgICAgICAgICAgICAgICAvLyDoi6XmmK/mnInlgZrpibTmnYN0b2tlbiAsIOWwsee7meWktOmDqOW4puS4inRva2VuCi8vICAgICAgICAgICAgICAgIC8vIOiuqeavj+S4quivt+axguaQuuW4pnRva2VuLS0gWydYLVRva2VuJ13kuLroh6rlrprkuYlrZXkg6K+35qC55o2u5a6e6ZmF5oOF5Ya16Ieq6KGM5L+u5pS5Ci8vICAgICAgICAgICAgICAgIC8vIOiLpeaYr+mcgOimgei3qOermeeCuSzlrZjmlL7liLAgY29va2llIOS8muWlveS4gOeCuSzpmZDliLbkuZ/msqHpgqPkuYjlpJos5pyJ5Lqb5rWP6KeI546v5aKD6ZmQ5Yi25LqGIGxvY2Fsc3RvcmFnZSAo6ZqQ6Lqr5qih5byPKeeahOS9v+eUqAovLyAgICAgICAgICAgICAgICAgY29uZmlnLmhlYWRlcnNbJ1gtVG9rZW4nXSA9IGdldFRva2VuKCkKLy8gICAgICAgICAgIH0KLy8gICAgIH0KLy8gICAgIHJldHVybiBjb25maWc7Ci8vICAgfSwKLy8gICBlcnJvciA9PiB7Ci8vICAgICAvLyDlr7nor7fmsYLplJnor6/lgZrkupvku4DkuYjvvIzoh6rlt7HlrprkuYkKLy8gICAgIE1lc3NhZ2UoeyAgICAgICAgICAgICAgICAgIC8v5L2/55SoZWxlbWVudC11aeeahG1lc3NhZ2Xov5vooYzkv6Hmga/mj5DnpLoKLy8gICAgICAgc2hvd0Nsb3NlOiB0cnVlLAovLyAgICAgICBtZXNzYWdlOiBlcnJvciwKLy8gICAgICAgdHlwZTogIndhcm5pbmciCi8vICAgICB9KTsKLy8gICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Ci8vICAgfSkKCmV4cG9ydCBkZWZhdWx0IHNlcnZpY2U7IC8vIC8vICAg5ZyoaHR0cC5qc+S4reW8leWFpWF4aW9zCi8vIGltcG9ydCBheGlvcyBmcm9tICdheGlvcycgLy/lvJXlhaUgYXhpb3MKLy8gLy8gY3JlYXRlIGFuIGF4aW9zIGluc3RhbmNlICAg5Yib5bu6YXhpb3Plrp7kvosKLy8gY29uc3QgVVJJID0gJ2h0dHA6Ly8xMjcuMC4wLjE6MzAwMC9hcGkvdXNlcnMvJwovLyBjb25zdCBjb25maWcgPWF4aW9zLmNyZWF0ZSh7Ci8vICAgLy8gYmFzZVVSTDogcHJvY2Vzcy5lbnYuQkFTRV9BUEksIC8vIGFwaSDnmoQgYmFzZV91cmwKLy8gICBiYXNlVVJMOiBVUkksIC8vIGFwaSDnmoQgYmFzZV91cmwKLy8gICB0aW1lb3V0OiA1MDAwLCAvLyByZXF1ZXN0IHRpbWVvdXQgIOiuvue9ruivt+axgui2heaXtuaXtumXtAovLyAgIHJlc3BvbnNlVHlwZTogImpzb24iLAovLyAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgLy8g5piv5ZCm5YWB6K645bimY29va2ll6L+Z5LqbCi8vICAgaGVhZGVyczogewovLyAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgiCi8vICAgfQovLyB9KQovLyBleHBvcnQgZGVmYXVsdCBjb25maWc="},{"version":3,"sources":["/Users/cc/Desktop/order/client/src/axiosAction/config.js"],"names":["axios","URI","service","create","baseURL","timeout","responseType","headers","validateStatus","status"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA4B;AAC5B;AACA;AACA;AACA;;AAGA,IAAMC,GAAG,GAAG,iCAAZ,C,CACA;;AACA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEH,GADkB;AACb;AACdI,EAAAA,OAAO,EAAE,IAFkB;AAEZ;AACfC,EAAAA,YAAY,EAAE,MAHa;AAI3B;AACAC,EAAAA,OAAO,EAAE;AACP,oBAAgB,gCADT,CAEP;;AAFO,GALkB;AAS3BC,EAAAA,cAAc,EAAE,wBAASC,MAAT,EAAiB;AAC/B,WAAOA,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAAjC,CAD+B,CACO;AACvC;AAX0B,CAAb,CAAhB,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,eAAgBP,OAAhB,C,CAMF;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["//   在http.js中引入axios\r\nimport axios from 'axios'   //引入 axios\r\n// import QS from 'qs'; // 引入qs模块，用来序列化post类型的数据，某些请求会用得到\r\n// import { Message } from 'element-ui'    //引入 element-ui 的 Message 模块，用于信息提示\r\n// import store from '@/store'     //引入 vuex 中的数据\r\n// import { getToken } from '@/utils/auth'   //引入拿到的权限tocken\r\n\r\n\r\nconst URI = 'http://127.0.0.1:3000/api/users'\r\n// create an axios instance   创建axios实例\r\nconst service = axios.create({\r\n  baseURL: URI, // api 的 base_url\r\n  timeout: 5000, // request timeout  设置请求超时时间\r\n  responseType: \"json\",\r\n  // withCredentials: true, // 是否允许带cookie这些\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=utf-8\",\r\n    // \"Access-Control-Allow-Credentials\": true,\r\n  },\r\n  validateStatus: function(status) {\r\n    return status >= 200 && status < 500; // default\r\n  }\r\n})\r\n\r\n\r\n// create an axios instance\r\n// service.interceptors.request.use(\r\n//   config => {\r\n//     // 在发送请求之前做什么\r\n//     if (config.method === \"post\") {\r\n//       // 序列化\r\n//       // config.data = qs.stringify(config.data);\r\n//       // config.data = JSON.stringify(config.data);\r\n//       // 温馨提示,若是贵公司的提交能直接接受json 格式,可以不用 qs 来序列化的\r\n//     }else {\r\n//           if (store.getters.token) {\r\n//                // 若是有做鉴权token , 就给头部带上token\r\n//                // 让每个请求携带token-- ['X-Token']为自定义key 请根据实际情况自行修改\r\n//                // 若是需要跨站点,存放到 cookie 会好一点,限制也没那么多,有些浏览环境限制了 localstorage (隐身模式)的使用\r\n//                 config.headers['X-Token'] = getToken()\r\n//           }\r\n//     }\r\n//     return config;\r\n//   },\r\n//   error => {\r\n//     // 对请求错误做些什么，自己定义\r\n//     Message({                  //使用element-ui的message进行信息提示\r\n//       showClose: true,\r\n//       message: error,\r\n//       type: \"warning\"\r\n//     });\r\n//     return Promise.reject(error);\r\n//   })\r\n\r\n\r\n  export default  service \r\n\r\n\r\n\r\n\r\n\r\n// //   在http.js中引入axios\r\n// import axios from 'axios' //引入 axios\r\n\r\n// // create an axios instance   创建axios实例\r\n// const URI = 'http://127.0.0.1:3000/api/users/'\r\n\r\n// const config =axios.create({\r\n//   // baseURL: process.env.BASE_API, // api 的 base_url\r\n//   baseURL: URI, // api 的 base_url\r\n//   timeout: 5000, // request timeout  设置请求超时时间\r\n//   responseType: \"json\",\r\n//   withCredentials: true, // 是否允许带cookie这些\r\n//   headers: {\r\n//     \"Content-Type\": \"application/json;charset=utf-8\"\r\n//   }\r\n// })\r\n\r\n\r\n// export default config "]}]}